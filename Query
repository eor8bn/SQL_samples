with 

prices_sq as (
  select order_id, date, product_id, price
  from (
        select order_id, date(creation_time) as date, unnest(product_ids) as product_id
        from orders
    ) products_in_orders 
        join products using(product_id)
  where order_id not in (select order_id from user_actions where action = 'cancel_order')
),

revenue_sq as (
  select date, sum(price) as revenue
  from prices_sq
  group by date
),

users_sq as (
  select
    date(time) as date,
    count(distinct user_id) as all_users,
    count(distinct user_id) filter (
      where order_id not in (select order_id from user_actions where action = 'cancel_order')
    ) as paying_users
  from user_actions
  group by date
),

orders_sq as (
  select date(time) as date, count(distinct order_id) as orders
  from user_actions
  where order_id not in (select order_id from user_actions where action = 'cancel_order')
  group by date
)

select
  date,
  round(revenue :: decimal / all_users, 2) as arpu,
  round(revenue :: decimal / paying_users, 2) as arppu,
  round(revenue :: decimal / orders, 2) as aov
from
  users_sq
  join revenue_sq using(date)
  join orders_sq using(date)
order by date
